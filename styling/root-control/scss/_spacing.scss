* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

:root {
    /* spacing values */
    --space-unit: 1em;

    --space-xxs: .5em;
    --space-xs: calc(var(--space-unit) / var(--text-scale-ratio) / var(--text-scale-ratio));
    --space-sm: calc(var(--space-unit) / var(--text-scale-ratio));
    --space-md: calc(var(--space-unit) * var(--text-scale-ratio));
    --space-lg: calc(var(--space-unit) * var(--text-scale-ratio) * var(--text-scale-ratio));
    --space-xl: calc(var(--space-unit) * var(--text-scale-ratio) * var(--text-scale-ratio) * var(--text-scale-ratio));
    --space-xxl: calc(var(--space-unit) * var(--text-scale-ratio) * var(--text-scale-ratio) * var(--text-scale-ratio) * var(--text-scale-ratio));

    // components padding
    --component-padding: var(--space-xs);
}

//create utility classes quickly
$pairs: (
    (xxs, var(--space-xxs)),
    (xs, var(--space-xs)),
    (sm, var(--space-sm)),
    (md, var(--space-md)),
    (lg, var(--space-lg)),
    (xl, var(--space-xl)),
    (xxl, var(--space-xxl))
);

@each $key, $value in $pairs {

    .m-#{$key} {
        margin: #{$value};
    }
    .mx-#{$key} {
        margin: 0 #{$value} 0;
    }
    .my-#{$key} {
        margin: #{$value} 0;
    }
    .mb-#{$key} {
        margin-bottom: #{$value};
    }
    .mt-#{$key} {
        margin-top: #{$value};
    }
}

body {
    margin: var(--space-md);
}

nav a {
    margin-bottom: var(--space-xxs);
}

p {
    text-indent: 2em;
    margin: var(--space-sm);
}

h1, h2, h3, h4, form legend {
    margin-bottom: var(--space-xxs);
}

// The reason why margins of lists and paragraphs descend from the .text-container class is to separate blocks of text from all the other places where a paragraph or an unordered list can be used. Optionally, you can target the <article> element.
.text-container {
    h2, h3, h4 {
        margin-top: var(--space-sm);
    }
    
    ul, ol, p {
        margin-bottom: var(--space-md);
    }
}